spring:
  application:
    name: kafka
  datasource:
    url: ${SPRING_LOG_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  servlet:
    multipart:
      max-file-size: 15MB
      max-request-size: 15MB
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: log
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  redis:
    host: ${LOG_REDIS_HOST}   # Redis host
    port: ${LOG_REDIS_PORT}   # Redis port

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
      fetch-registry: true
      register-with-eureka: true

server:
  port: 8083


feign:
  client:
    config:
      auth:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic