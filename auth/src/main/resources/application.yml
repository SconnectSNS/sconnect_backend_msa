app:
  jwt:
    accessTokenValidMS: 3600000
    refreshTokenValidMS: 604800000
    secret: ${APP_JWT_SECRET}

spring:
  application:
    name: auth
  datasource:
    url: ${SPRING_AUTH_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  redis:
    host: ${SCONNECT_REDIS_HOST}   # Redis host
    port: ${SCONNECT_REDIS_PORT}   # Redis port
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      group-id: auth
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
server:
    port: 8081

eureka:
  client:
    service-url:
        defaultZone: http://localhost:8761/eureka/
        fetch-registry: true
        register-with-eureka: true

feign:
  client:
    config:
      auth:
        decode404: false
        logger-level: full
        connectTimeout: 5000
        readTimeout: 5000

external-api:
  auth:
    api-url: http://localhost:8082/
    authorization: test #TODO:서버간 인증 키 설정